import pygame
import sys
import random

# Initialize pygame
pygame.init()

WIDTH, HEIGHT = 400, 400
GRID_SIZE = 20
GRID_WIDTH = WIDTH // GRID_SIZE
GRID_HEIGHT = HEIGHT // GRID_SIZE
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")


clock = pygame.time.Clock()


snake = [(5, 5)]
snake_direction = (1, 0)


food = (random.randint(0, GRID_WIDTH - 1), random.randint(0, GRID_HEIGHT - 1))

# Game over flag
game_over = False


while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                snake_direction = (0, -1)
            elif event.key == pygame.K_DOWN:
                snake_direction = (0, 1)
            elif event.key == pygame.K_LEFT:
                snake_direction = (-1, 0)
            elif event.key == pygame.K_RIGHT:
                snake_direction = (1, 0)

    # Move the snake
    x, y = snake[0]
    new_x = (x + snake_direction[0]) % GRID_WIDTH
    new_y = (y + snake_direction[1]) % GRID_HEIGHT
    new_head = (new_x, new_y)

    
    if new_head == food:
        snake.append(food)
        food = (random.randint(0, GRID_WIDTH - 1), random.randint(0, GRID_HEIGHT - 1))
    else:
        # Check for collision with self
        if new_head in snake:
            game_over = True
        else:
            snake.insert(0, new_head)
            snake.pop()

    # Clear the screen
    screen.fill((0, 0, 0))

    
    pygame.draw.rect(screen, RED, (food[0] * GRID_SIZE, food[1] * GRID_SIZE, GRID_SIZE, GRID_SIZE))

    
    for segment in snake:
        pygame.draw.rect(screen, GREEN, (segment[0] * GRID_SIZE, segment[1] * GRID_SIZE, GRID_SIZE, GRID_SIZE))

    
    pygame.display.update()

  
    clock.tick(10)

# Quit the game
pygame.quit()
sys.exit()
